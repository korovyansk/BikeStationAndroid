import java.text.SimpleDateFormat

apply plugin: 'com.android.application'
apply plugin: 'crashlytics'

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    compile "com.google.android.gms:play-services:5.0.+"
    compile 'com.android.support:cardview-v7:+'

    compile 'com.crashlytics.android:crashlytics:1.+'

    compile 'com.squareup.retrofit:retrofit:1.6.1'
    compile 'com.squareup:otto:1.3.5'

    compile 'com.squareup.dagger:dagger:1.2.1'
    provided 'com.squareup.dagger:dagger-compiler:1.2.1'

    compile 'com.jakewharton:butterknife:5.1.2'
    compile 'com.jakewharton.timber:timber:2.4.1'

    compile 'com.netflix.rxjava:rxjava-android:0.19.4'
}

def versionMajor = 0
def versionMinor = 1
def versionPatch = 0
def versionBuild = 0 // bump for dogfood builds, public betas, etc.

def gitSha() {
    return "git --git-dir=${rootDir}/../.git --work-tree=${rootDir}/.. rev-parse --short HEAD".execute().text.trim()
}

def buildTime() {
    def df = new SimpleDateFormat("yyyy-MM-dd'T'HH:mm'Z'")
    df.setTimeZone(TimeZone.getTimeZone("UTC"))
    return df.format(new Date())
}


android {
    compileSdkVersion 20
    buildToolsVersion "20.0.0"

    defaultConfig {
        applicationId "ucsoftworks.com.bikestation"
        minSdkVersion 15
        targetSdkVersion 20
        versionCode versionMajor * 100000 + versionMinor * 1000 + versionPatch * 10 + versionBuild
        versionName "${versionMajor}.${versionMinor}.${versionPatch}"
        buildConfigField 'String', 'GIT_SHA', '"' + "${gitSha()}" + '"'
        buildConfigField 'String', 'BUILD_TIME', '"' + "${buildTime()}'" + '"'
    }

    signingConfigs {
        debug {
            storeFile file('../distribution/debug.keystore')
        }

        release {
            storeFile file(project.RELEASE_KEYSTORE_FILE)
            storePassword project.RELEASE_KEYSTORE_PASSWORD
            keyAlias project.RELEASE_KEYSTORE_KEY_ALIAS
            keyPassword project.RELEASE_KEYSTORE_KEY_PASSWORD
        }
    }

    buildTypes {
        debug {
            signingConfig signingConfigs.debug
        }

        release {
            signingConfig signingConfigs.release
            runProguard false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.txt'
        }

    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }
}
